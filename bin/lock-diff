#!/usr/bin/env ruby
# Copy-pastable Gemfile.lock diff compared to master (override with COMMIT=)
#
# - COMMIT= compare to a specific commit (default: master)
# - BUNDLE_GEMFILE= compare this gemfile (default: Gemfile)

require 'bundler/setup'
require 'shellwords'
require 'json'
require 'cgi'

def sh(*command)
  command = command.shelljoin
  result = `#{command} 2>&1`
  raise "Command failed\n#{command}\n#{result}" unless $?.success?
  result
end

def versions(lock)
  lock.scan(/^    (\S+) \((\S+)\)/).to_h
end

def github_compare(gem, old, new)
  text = "v#{old} -> v#{new}"
  return text unless spec = spec(gem, new)

  url = spec.metadata["source_code_uri"] || spec.homepage
  return text unless url.include?("github.com")

  # "..." mode is nicer, but does not show downgrades
  # see https://help.github.com/articles/about-comparing-branches-in-pull-requests/#three-dot-and-two-dot-git-diff-comparisons
  compare_mode = (Gem::Version.new(new) > Gem::Version.new(old) ? "..." : "..")
  "[#{text}](#{url}/compare/v#{CGI.escape(old)}#{compare_mode}v#{CGI.escape(new)})"
end

def spec(gem, version)
  Gem::Specification.find_by_name(gem, version)
rescue Gem::MissingSpecError
  nil
end

# TODO: find source from spec somehow ... don't think that works :/
def link_to_gem(gem)
  "[#{gem}](https://rubygems.org/gems/#{gem})"
end

lockfile = "#{ENV["BUNDLE_GEMFILE"] || "Gemfile"}.lock"
lockfile.sub!("#{Bundler.root}/", "")
before = versions(sh("git", "show", "#{ENV["COMMIT"] || "master"}:#{lockfile}"))
after = versions(File.read(lockfile))

added = after.keys - before.keys
removed = before.keys - after.keys
modified = (after.keys & before.keys).select { |gem| before[gem] != after[gem] }

added.each { |gem| puts " - #{link_to_gem(gem)} v#{after[gem]} Added" }
removed.each { |gem| puts " - #{link_to_gem(gem)} v#{before[gem]} Removed" }
modified.each do |gem|
  old = before[gem]
  new = after[gem]
  puts " - #{link_to_gem(gem)} #{github_compare(gem, old, new)}"
end
